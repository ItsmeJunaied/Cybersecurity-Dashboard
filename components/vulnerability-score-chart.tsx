"use client"

import { useState, useEffect } from 'react'
import { 
  Card, 
  CardContent, 
  CardDescription, 
  CardHeader, 
  CardTitle, 
  CardFooter 
} from "@/components/ui/card"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { Button } from "@/components/ui/button"
import { 
  ChartContainer, 
  ChartTooltipContent 
} from "@/components/ui/chart"
import { 
  ArrowUpRight, 
  ArrowDownRight, 
  Shield, 
  AlertTriangle, 
  AlertCircle, 
  Clock, 
  TrendingUp 
} from "lucide-react"
import { 
  ResponsiveContainer, 
  PieChart, 
  Pie, 
  Cell, 
  Tooltip, 
  BarChart, 
  Bar, 
  XAxis, 
  YAxis, 
  CartesianGrid, 
  Legend,
  LineChart,
  Line,
  AreaChart,
  Area
} from "recharts"

// Sample data for demonstration
const THREAT_CATEGORIES = [
  { name: "Critical", value: 12, color: "#F24C3D" },
  { name: "High", value: 18, color: "#E55604" },
  { name: "Medium", value: 34, color: "#F2BE22" },
  { name: "Low", value: 27, color: "#22A699" },
  { name: "Info", value: 9, color: "#41644A" }
]

const THREAT_ORIGIN = [
  { name: "External", value: 47, color: "#F24C3D" },
  { name: "Internal", value: 28, color: "#E55604" },
  { name: "Supply Chain", value: 16, color: "#F2BE22" },
  { name: "Unknown", value: 9, color: "#22A699" }
]

const THREAT_TREND_DATA = [
  { name: "Jan", critical: 3, high: 4, medium: 8, low: 6 },
  { name: "Feb", critical: 5, high: 6, medium: 10, low: 8 },
  { name: "Mar", critical: 7, high: 9, medium: 12, low: 9 },
  { name: "Apr", critical: 10, high: 12, medium: 18, low: 11 },
  { name: "May", critical: 8, high: 15, medium: 20, low: 15 },
  { name: "Jun", critical: 12, high: 18, medium: 34, low: 27 }
]

const ATTACK_VECTORS = [
  { name: "Phishing", count: 38 },
  { name: "Malware", count: 27 },
  { name: "Exploits", count: 21 },
  { name: "DoS", count: 18 },
  { name: "Social Eng.", count: 15 },
  { name: "Others", count: 11 }
]

const AFFECTED_ASSETS = [
  { name: "Web Servers", value: 32 },
  { name: "Databases", value: 24 },
  { name: "Workstations", value: 19 },
  { name: "IoT Devices", value: 14 },
  { name: "Network Devices", value: 11 }
]

export function ThreatDashboard() {
  const [activeTab, setActiveTab] = useState("overview")
  const [threatData, setThreatData] = useState(THREAT_CATEGORIES)
  const [originData, setOriginData] = useState(THREAT_ORIGIN)
  const [trendData, setTrendData] = useState(THREAT_TREND_DATA)
  const [vectorData, setVectorData] = useState(ATTACK_VECTORS)
  const [assetData, setAssetData] = useState(AFFECTED_ASSETS)

  useEffect(() => {
    // In a real app, you would fetch data from your API
    // For now, we're using sample data defined above
    
    // You could load from localStorage as in your original example
    const storedThreatData = localStorage.getItem("threatData")
    if (storedThreatData) {
      setThreatData(JSON.parse(storedThreatData))
    }
    
    // Additional data fetching would go here
  }, [])

  const totalThreats = threatData.reduce((sum, item) => sum + item.value, 0)
  const criticalThreats = threatData.find(item => item.name === "Critical")?.value || 0
  const highThreats = threatData.find(item => item.name === "High")?.value || 0
  
  return (
    <div className="space-y-4">
      <div className="grid gap-4 md:grid-cols-2 lg:grid-cols-4">
        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">
              Total Threats
            </CardTitle>
            <Shield className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{totalThreats}</div>
            <p className="text-xs text-muted-foreground">
              +12% from last month
            </p>
          </CardContent>
        </Card>
        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">
              Critical Threats
            </CardTitle>
            <AlertCircle className="h-4 w-4 text-red-500" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{criticalThreats}</div>
            <div className="flex items-center space-x-1 text-xs text-red-500">
              <ArrowUpRight className="h-3 w-3" />
              <span>+25% from last month</span>
            </div>
          </CardContent>
        </Card>
        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">
              High Threats
            </CardTitle>
            <AlertTriangle className="h-4 w-4 text-amber-500" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{highThreats}</div>
            <div className="flex items-center space-x-1 text-xs text-amber-500">
              <ArrowUpRight className="h-3 w-3" />
              <span>+8% from last month</span>
            </div>
          </CardContent>
        </Card>
        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">
              Time to Resolve
            </CardTitle>
            <Clock className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">5.2 days</div>
            <div className="flex items-center space-x-1 text-xs text-green-500">
              <ArrowDownRight className="h-3 w-3" />
              <span>-12% from last month</span>
            </div>
          </CardContent>
        </Card>
      </div>
      
      <Tabs defaultValue="overview" onValueChange={setActiveTab}>
        <TabsList className="grid grid-cols-4 md:w-full md:max-w-md">
          <TabsTrigger value="overview">Overview</TabsTrigger>
          <TabsTrigger value="trends">Trends</TabsTrigger>
          <TabsTrigger value="vectors">Attack Vectors</TabsTrigger>
          <TabsTrigger value="assets">Affected Assets</TabsTrigger>
        </TabsList>
        
        <TabsContent value="overview" className="space-y-4">
          <div className="grid gap-4 md:grid-cols-2">
            <Card>
              <CardHeader>
                <CardTitle>Threat Distribution</CardTitle>
                <CardDescription>Breakdown of threats by severity</CardDescription>
              </CardHeader>
              <CardContent className="px-2">
                <VulnerabilityScoreChart data={threatData} />
              </CardContent>
              <CardFooter>
                <div className="text-xs text-muted-foreground">
                  Critical threats are up 25% from last month
                </div>
              </CardFooter>
            </Card>
            
            <Card>
              <CardHeader>
                <CardTitle>Threat Origin</CardTitle>
                <CardDescription>Sources of security threats</CardDescription>
              </CardHeader>
              <CardContent className="px-2">
                <ThreatOriginChart data={originData} />
              </CardContent>
              <CardFooter>
                <div className="text-xs text-muted-foreground">
                  External threats remain the primary source at 47%
                </div>
              </CardFooter>
            </Card>
          </div>
        </TabsContent>
        
        <TabsContent value="trends" className="space-y-4">
          <Card>
            <CardHeader>
              <CardTitle>Threat Trends</CardTitle>
              <CardDescription>6-month view of threat evolution</CardDescription>
            </CardHeader>
            <CardContent className="px-2">
              <ThreatTrendChart data={trendData} />
            </CardContent>
            <CardFooter>
              <Button variant="outline" size="sm" className="ml-auto">
                <TrendingUp className="mr-1 h-4 w-4" />
                View Details
              </Button>
            </CardFooter>
          </Card>
        </TabsContent>
        
        <TabsContent value="vectors" className="space-y-4">
          <Card>
            <CardHeader>
              <CardTitle>Attack Vectors</CardTitle>
              <CardDescription>Common attack methods used</CardDescription>
            </CardHeader>
            <CardContent className="px-2">
              <AttackVectorsChart data={vectorData} />
            </CardContent>
            <CardFooter>
              <div className="text-xs text-muted-foreground">
                Phishing remains the most common attack vector at 38%
              </div>
            </CardFooter>
          </Card>
        </TabsContent>
        
        <TabsContent value="assets" className="space-y-4">
          <Card>
            <CardHeader>
              <CardTitle>Affected Assets</CardTitle>
              <CardDescription>Distribution of compromised assets</CardDescription>
            </CardHeader>
            <CardContent className="px-2">
              <AffectedAssetsChart data={assetData} />
            </CardContent>
            <CardFooter>
              <div className="text-xs text-muted-foreground">
                Web servers continue to be the most targeted assets
              </div>
            </CardFooter>
          </Card>
        </TabsContent>
      </Tabs>
    </div>
  )
}

// Pie chart for vulnerability scores
interface VulnerabilityScoreData {
  name: string;
  value: number;
  color?: string;
}

export function VulnerabilityScoreChart({ data }: { data: VulnerabilityScoreData[] }) {
  return (
    <ChartContainer
      config={{
        name: {
          label: "Category",
        },
        value: {
          label: "Count",
        },
      }}
      className="aspect-[2/1] w-full h-auto min-h-[300px]"
    >
      <ResponsiveContainer width="100%" height="100%">
        <PieChart>
          <Pie
            data={data}
            cx="50%"
            cy="50%"
            innerRadius={60}
            outerRadius={80}
            paddingAngle={5}
            dataKey="value"
            label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}
            labelLine={false}
          >
            {data.map((entry, index) => (
              <Cell key={`cell-${index}`} fill={entry.color || `#${Math.floor(Math.random()*16777215).toString(16)}`} />
            ))}
          </Pie>
          <Tooltip content={<ChartTooltipContent />} />
        </PieChart>
      </ResponsiveContainer>
    </ChartContainer>
  )
}

// Pie chart for threat origins
interface ThreatOriginData {
  name: string;
  value: number;
  color?: string;
}

export function ThreatOriginChart({ data }: { data: ThreatOriginData[] }) {
  return (
    <ChartContainer
      config={{
        name: {
          label: "Origin",
        },
        value: {
          label: "Count",
        },
      }}
      className="aspect-[2/1] w-full h-auto min-h-[300px]"
    >
      <ResponsiveContainer width="100%" height="100%">
        <PieChart>
          <Pie
            data={data}
            cx="50%"
            cy="50%"
            innerRadius={60}
            outerRadius={80}
            paddingAngle={5}
            dataKey="value"
            label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}
            labelLine={false}
          >
            {data.map((entry, index) => (
              <Cell key={`cell-${index}`} fill={entry.color || `#${Math.floor(Math.random()*16777215).toString(16)}`} />
            ))}
          </Pie>
          <Tooltip content={<ChartTooltipContent />} />
        </PieChart>
      </ResponsiveContainer>
    </ChartContainer>
  )
}

interface ThreatTrendData {
  name: string;
  critical: number;
  high: number;
  medium: number;
  low: number;
}

export function ThreatTrendChart({ data }: { data: ThreatTrendData[] }) {
  return (
    <ChartContainer 
      config={{
        name: { label: "Asset" },
        value: { label: "Count" }
      }} 
      className="aspect-[2/1] w-full h-auto min-h-[300px]"
    >
      <ResponsiveContainer width="100%" height="100%">
        <LineChart
          data={data}
          margin={{
            top: 5,
            right: 30,
            left: 20,
            bottom: 5,
          }}
        >
          <CartesianGrid strokeDasharray="3 3" />
          <XAxis dataKey="name" />
          <YAxis />
          <Tooltip content={<ChartTooltipContent />} />
          <Legend />
          <Line type="monotone" dataKey="critical" stroke="#F24C3D" activeDot={{ r: 8 }} />
          <Line type="monotone" dataKey="high" stroke="#E55604" />
          <Line type="monotone" dataKey="medium" stroke="#F2BE22" />
          <Line type="monotone" dataKey="low" stroke="#22A699" />
        </LineChart>
      </ResponsiveContainer>
    </ChartContainer>
  )
}

// Bar chart for attack vectors
interface AttackVectorData {
  name: string;
  count: number;
}

export function AttackVectorsChart({ data }: { data: AttackVectorData[] }) {
  return (
    <ChartContainer 
      config={{
        name: { label: "Attack Vector" },
        value: { label: "Count" }
      }} 
      className="aspect-[2/1] w-full h-auto min-h-[300px]">
      <ResponsiveContainer width="100%" height="100%">
        <BarChart
          data={data}
          margin={{
            top: 5,
            right: 30,
            left: 20,
            bottom: 5,
          }}
        >
          <CartesianGrid strokeDasharray="3 3" />
          <XAxis dataKey="name" />
          <YAxis />
          <Tooltip content={<ChartTooltipContent />} />
          <Bar dataKey="count" fill="#41644A" />
        </BarChart>
      </ResponsiveContainer>
    </ChartContainer>
  )
}

// Area chart for affected assets
interface AffectedAssetData {
  name: string;
  value: number;
}

export function AffectedAssetsChart({ data }: { data: AffectedAssetData[] }) {
  return (
    <ChartContainer 
      config={{
        name: { label: "Asset" },
        value: { label: "Count" }
      }} 
      className="aspect-[2/1] w-full h-auto min-h-[300px]">
      <ResponsiveContainer width="100%" height="100%">
        <AreaChart
          data={data}
          margin={{
            top: 5,
            right: 30,
            left: 20,
            bottom: 5,
          }}
        >
          <CartesianGrid strokeDasharray="3 3" />
          <XAxis dataKey="name" />
          <YAxis />
          <Tooltip content={<ChartTooltipContent />} />
          <Area type="monotone" dataKey="value" fill="#41644A" stroke="#41644A" />
        </AreaChart>
      </ResponsiveContainer>
    </ChartContainer>
  )
}